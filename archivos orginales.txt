index

import SplashScreen from "@/src/layouts/SplashScreen";
export default function Index(){
  return <SplashScreen/>
}



splas 


import { useEffect, useState } from "react";
import { View, Image, StyleSheet } from "react-native";
import LoginScreen from "./LoginScreen";

export default function SplashScreen() {
  const [showLogin, setShowLogin] = useState(false);

  useEffect(() => {
    const timer = setTimeout(() => {
      setShowLogin(true);
    }, 3000); // 3 segundos
    
    return () => clearTimeout(timer);
  }, []);

  if (showLogin) {
    return <LoginScreen />;
  }

  // Return corregido
  return (
    <View style={styles.container}>
      <Image 
        source={require("C:/Users/ASUS/Documents/health_app/assets/images/Logo_unicesmag.png")} 
        style={styles.image} 
      />
    </View>
  );
}

// Estilos dentro del componente
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "white"
  },
  image: {
    width: 200,
    height: 200
  }
});



login 

import { useNavigation } from "expo-router";
import { useState } from "react";
import { View, Text, TextInput, StyleSheet, Alert, TouchableOpacity, BackHandler, ImageBackground } from "react-native";
import { useEffect} from "react";
import RegisterScreen from "./RegisterScreen";


export default function LoginScreen() {
  
const navigation = useNavigation();
const [ShowRegister, setShowRegister] = useState(false);


  useEffect(()=> {
    navigation.setOptions({ healderShown: false})

  }, [navigation]);

  if (ShowRegister){
    return <RegisterScreen onClose={() => setShowRegister(false)} />
}

  //const [email, setEMail] = useState();
    return (
        <View style={styles.container}>
         <Text style={styles.title}>Sign in</Text>
          
          <TextInput
          style={styles.input}
           placeholder="admin@gmail.com"/>

           
          
          <TextInput
               style={styles.input}
               placeholder="**********"
               secureTextEntry />
        
        <TouchableOpacity style={styles.button}>
          <Text style={styles.buttonText}>Login</Text>
          </TouchableOpacity>

          <TouchableOpacity onPress={()=> setShowRegister(true)}>
            <Text style={styles.link}>Sign up</Text>
          </TouchableOpacity>

        </View>
      );
}

const styles = StyleSheet.create({
container: {
  flex: 1,
  justifyContent:"center",
  alignItems: "center",
  backgroundColor: "#f0f0f0"
},
title:{
  fontSize: 24,
  fontWeight: "bold",
  marginBottom: 20
},
input:{
  width: "80%",
  marginVertical:10,
  backgroundColor: "White",
  borderRadius: 5,
  borderWidth:1,
  borderColor: "#ccc"
},
button:{
  marginTop:20,
  backgroundColor:"#007bff",
  padding: 10,
  borderRadius: 5,
  width: "80%",
  alignItems: "center"
},
buttonText:{
  color:"white",
  fontSize: 14,
  fontWeight: "bold"
},

link: {
marginTop:10,
color: "blue",
textDecorationLine: "underline"

},

});



register 



import React, { useState } from "react";
import { View, Text, TextInput, TouchableOpacity, StyleSheet } from "react-native";
import { supabase } from "../supabaseClient";

export default function RegisterScreen({ onClose }: any) {
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [fullname, setFullName] = useState("");
    const [mobilephone, setMobilePhone] = useState("");
    const [loading, setLoading] = useState(false);
    const [errorMessage, setErrorMessage] = useState("");
    
    const handleRegister = async () => {
        setLoading(true);
        setErrorMessage("");

        const { data, error } = await supabase.auth.signUp({
            email, 
            password
        });

        if(error) {
            setErrorMessage(error.message);
            setLoading(false);
            return;
        }

        //Insert data into Supabase table
        const { error: InsertError } = await supabase.from("users").insert([
            { 
                email: email, 
                password: password,
                fullname: fullname,
                mobile_phone: mobilephone
            }
        ]);

        setLoading(false);
        if (InsertError) {
            setErrorMessage(InsertError.message);
        } else {
            alert("User has been created successfully");
            onClose();
        }
    }

    return (
        <View style={styles.container}>
            <Text style={styles.title}>Sign up</Text>
            <TextInput
                style={styles.input}
                placeholder="admin@mail.com"
            />
            <TextInput
                style={styles.input}
                placeholder="*********"
            />
            <TextInput
                style={styles.input}
                placeholder="Your fullname"
            />
            <TextInput
                style={styles.input}
                placeholder="(+57) 000000000"
            />
            <TouchableOpacity style={styles.button}>
                <Text style={styles.buttonText}>Register</Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={onClose}>
                <Text style={styles.link}>Back to login</Text>
            </TouchableOpacity>
        </View>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "#F0F0F0"
    },
    title: {
        fontSize: 24,
        fontWeight: "bold",
        marginBottom: 20
    },
    input: {
        width: "80%",
        padding: 10,
        marginVertical: 10,
        backgroundColor: "white",
        borderRadius: 5,
        borderWidth: 1,
        borderColor: "#ccc"
    },
    button: {
        marginTop: 20,
        backgroundColor: "#007bff",
        padding: 10,
        borderRadius: 5,
        width: "80%",
        alignItems: "center"
    },
    buttonText: {
        color: "white",
        fontSize: 14,
        fontWeight: "bold"
    },
    link: {
        marginTop: 10,
        color: "blue",
        textDecorationLine: "underline"
    },
});


home 



import { View, Text, Button, StyleSheet } from "react-native";

export default function HomeScreen({ navigation }) {
  const handleLogout = async () => {
    // Lógica de cierre de sesión con Supabase
    const { error } = await supabase.auth.signOut();
    if (!error) navigation.navigate("Login");
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Bienvenido a la pantalla principal</Text>
      <Button title="Cerrar sesión" onPress={handleLogout} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  title: {
    fontSize: 20,
    marginBottom: 20,
  },
});



layout



import { Stack } from "expo-router";

export default function RootLayout() {
  return <Stack />;
}



